apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api-deploymnet
spec:
  replicas: 5
  selector:
    matchLabels: 
      app: {{ .Release.Name }}-api
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-api
    spec:
      initContainers:
        - name: init-pod
          image: busybox:1.28
          command: ["sh", "-c", "until nslookup mongo-service.default.svc.cluster.local; do echo Aguardando o Banco de Dados; sleep 2; done"]   
      containers:
        - name: api
          image: {{ .Values.api.image }}
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
          imagePullPolicy: Always
          resources:
            requests:            
              memory: "32Mi"
              cpu: "150m"
            limits:
              memory: "64Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /read
              port: 80
              scheme: HTTP
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 5           
          startupProbe:
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            failureThreshold: 30
            periodSeconds: 10            
          livenessProbe:
            httpGet:
              path: /health
              port: 80
              scheme: HTTP              
            timeoutSeconds: 1
            failureThreshold: 20
            periodSeconds: 5
          envFrom:
            - configMapRef:
                name: api-configmap
          env:
            - name: Mongo__User
              value: {{ .Values.mongodb.credentials.userName }}                       
            - name: Mongo__Password
              value: {{ .Values.mongodb.credentials.userPassword }}
            - name: Mongo__Host
              value: {{ .Release.Name }}-mongo-service
            - name: Mongo__Database
              value: {{ .Values.mongodb.credentials.databaseName }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - "mongodb"
        podAntiAffinity:          
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - "api"